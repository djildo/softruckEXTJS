/*
 * File: app/view/panelMainViewController.js
 *
 * This file was generated by Sencha Architect version 3.5.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('softruck.view.panelMainViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.panelmain',

    pesquisa: function() {
        var me = this;

        if (me.lookupReference('cidade').getValue() !== '') {
            Ext.getBody().mask("Aguarde! carregando...");
            var store = Ext.getStore('mapa');
            var storeC = Ext.getStore('cidade');

            storeC.proxy.extraParams.url = me.lookupReference('cidade').getValue();
            storeC.load({
                callback: function(records, operation, success) {
                    if (success) {

                        latitude = records[0].data.geometry.location.lat;
                        longitude = records[0].data.geometry.location.lng;

                        if(me.lookupReference('tpPesquisa').getChecked()[0].inputValue == 1 || me.lookupReference('tpPesquisa').getChecked()[0].inputValue == 3) {
                            store.proxy.setUrl = 'https://api.foursquare.com/v2/venues/search?client_id=40JVBWNP40V0BRDSFGOP1HCZGEI33DLGMHIAP0VHI2D3N2XD&client_secret=2SXCW1FXGQZUHFAJYG53CLOSNZTAXWFTZ5GVLH2B1A0NCWU3&v=20160526';
                            store.proxy.extraParams.limit = 50;
                        }
                        else if (me.lookupReference('tpPesquisa').getChecked()[0].inputValue == 2){
                            store.proxy.setUrl = 'https://api.foursquare.com/v2/venues/explore?client_id=40JVBWNP40V0BRDSFGOP1HCZGEI33DLGMHIAP0VHI2D3N2XD&client_secret=2SXCW1FXGQZUHFAJYG53CLOSNZTAXWFTZ5GVLH2B1A0NCWU3&v=20160526';
                            store.proxy.extraParams.limit = 5;
                        }

                        if(!isNaN(latitude) && !isNaN(longitude)) {
                            store.proxy.extraParams.ll = latitude+','+longitude;
                            store.proxy.extraParams.near = '';
                        } else {
                            store.proxy.extraParams.near = me.lookupReference('cidade').getValue();
                            store.proxy.extraParams.ll = '';
                        }
                        store.proxy.extraParams.radius = me.lookupReference('distancia').getValue();
                        store.proxy.extraParams.query = me.lookupReference('categoria').getValue();

                        store.load({
                            callback: function(records, operation, success) {
                                Ext.getBody().unmask();
                                if (success) {
                                    markers = [];

                                    function initMap() {
                                        var store = Ext.getStore('mapa');

                                        map = new google.maps.Map(document.getElementById('mapa'), {
                                            scrollwheel: false,
                                            zoom: 8
                                        });

                                        if(!isNaN(latitude) && !isNaN(longitude)) {
                                            var marker = new google.maps.Marker({
                                                map: map,
                                                position: {lat:latitude, lng:longitude},
                                                icon: 'resources/imagem/member.png',
                                                title: 'Minha Localização'
                                            });

                                            markers.push(marker);
                                        }

                                        var bounds = new google.maps.LatLngBounds();

                                        store.each(function(record, idx) {
                                            var myLatLng2 = {lat:record.data.location.lat, lng: record.data.location.lng};

                                            var marker = new google.maps.Marker({
                                                map: map,
                                                position: myLatLng2,
                                                //icon: icon,
                                                title: record.get('name')
                                            });

                                            markers.push(marker);
                                        });

                                        for (var i = 0; i < markers.length; i++) {
                                            markers[i].setMap(map);
                                            bounds.extend(markers[i].getPosition());
                                        }

                                        map.fitBounds(bounds);

                                        if(me.lookupReference('tpPesquisa').getChecked()[0].inputValue == 3) {
                                            var getGoogleClusterInlineSvg = function (color) {
                                                var encoded = window.btoa('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-100 -100 200 200"><defs><g id="a" transform="rotate(45)"><path d="M0 47A47 47 0 0 0 47 0L62 0A62 62 0 0 1 0 62Z" fill-opacity="0.7"/><path d="M0 67A67 67 0 0 0 67 0L81 0A81 81 0 0 1 0 81Z" fill-opacity="0.5"/><path d="M0 86A86 86 0 0 0 86 0L100 0A100 100 0 0 1 0 100Z" fill-opacity="0.3"/></g></defs><g fill="' + color + '"><circle r="42"/><use xlink:href="#a"/><g transform="rotate(120)"><use xlink:href="#a"/></g><g transform="rotate(240)"><use xlink:href="#a"/></g></g></svg>');

                                                return ('data:image/svg+xml;base64,' + encoded);
                                            };

                                            var cluster_styles = [
                                                {
                                                    width: 40,
                                                    height: 40,
                                                    url: getGoogleClusterInlineSvg('green'),
                                                    textColor: 'white',
                                                    textSize: 12
                                                },
                                                {
                                                    width: 50,
                                                    height: 50,
                                                    url: getGoogleClusterInlineSvg('red'),
                                                    textColor: 'white',
                                                    textSize: 14
                                                },
                                                {
                                                    width: 60,
                                                    height: 60,
                                                    url: getGoogleClusterInlineSvg('red'),
                                                    textColor: 'white',
                                                    textSize: 16
                                                }
                                            ];

                                            markerCluster = new MarkerClusterer(map, markers, {
                                                styles: cluster_styles
                                            });
                                        }

                                    }
                                    initMap();
                                } else {

                                }
                            }
                        });
                    }
                }
            });
        } else {
            Ext.toast({
                html: 'Ops, Informe sua localização! você ainda não ativou a Geolocalização, ai não rola!',
                closable: true,
                align: 't',
                slideInDuration: 200,
                minWidth: 400
            });
            me.lookupReference('cidade').focus();
        }
    },

    onMapaAfterLayout: function(container, layout, eOpts) {
        var store = Ext.getStore('mapa');
        store.load();
    },

    onRadiogroupChange: function(field, newValue, oldValue, eOpts) {
        if (newValue == 1) {
            pegaLocalizacao();
        }
        this.pesquisa();
    },

    onTextfieldSpecialkey: function(field, e, eOpts) {
        if (e.getKey() === e.ENTER) {
            this.pesquisa();
        }
    },

    onTextfieldSpecialkey1: function(field, e, eOpts) {
        if (e.getKey() === e.ENTER) {
            this.pesquisa();
        }
    },

    onSliderChangeComplete: function(slider, newValue, thumb, eOpts) {
        this.pesquisa();
    },

    onViewportAfterLayout: function(container, layout, eOpts) {
        this.lookupReference('cidade').focus();
    }

});
